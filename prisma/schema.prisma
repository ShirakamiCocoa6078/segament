// 파일 경로: prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  gameProfiles  GameProfile[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model GameProfile {
  id            String    @id @default(cuid())
  userId        String
  gameType      String
  region        String
  playerName    String
  rating        Float     @default(0)
  overPower     Float     @default(0)
  level         Int       @default(0)
  playCount     Int       @default(0)
  honors        Json?
  teamName      String?
  lastPlayDate  String?
  battleRankImg String?
  friendCode    String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // GameData와의 1:1 관계 설정
  gameData      GameData?

  @@unique([userId, gameType, region])
}

// --- 신규 모델 ---
// 기존의 GamePlaylog와 RatingList를 대체합니다.
model GameData {
  id          String @id @default(cuid())
  profileId   String @unique
  
  // 플레이 기록 전체를 담는 JSON 필드
  playlogs    Json?
  // 레이팅 리스트(Best, New)를 담는 JSON 필드
  ratingLists Json?
  
  updatedAt   DateTime @updatedAt
  profile     GameProfile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}